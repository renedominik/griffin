/////////////////////////////////////////////////////////////////////////
//!									 
//  This file is part of the GRIFFIN program				 
//									 
//  Copyright (C) 2010 by Rene Staritzbichler		      	 
//  rene.staritzbichler@biophys.mpg.de			       	 
//									 
//  GRIFFIN is free software; you can redistribute it and/or modify	 
//  it under the terms of the GNU General Public License as published by 
//  the Free Software Foundation; either version 2 of the License, or 
//  (at your option) any later version.				 
//									 
//  GRIFFIN is distributed in the hope that it will be useful,	 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of	 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	 
//  GNU General Public License for more details.			 
//!									 
//!									 
//!									 
//!									 
//!									 
//! @author: Rene Staritzbichler					 
//! @date:   1.2.2011						 
/////////////////////////////////////////////////////////////////////////


#include "../../include/molecule/element_data_map.h"

namespace mol
{
    const std::map< std::string, boost::shared_ptr< ElementData> > ElementDataMap::s_Map( ElementDataMap().BuildMap());
    const boost::shared_ptr< ElementData> ElementDataMap::s_Empty = boost::shared_ptr< ElementData>();

    boost::shared_ptr< ElementData> & ElementDataMap::operator () ( const std::string &STRING) const
    {
        std::map< std::string, boost::shared_ptr< ElementData> >::const_iterator itr( s_Map.find(  STRING));
        if( itr == s_Map.end())
        {
            std::cout << "===> WARNING: unknown element type: <" << STRING << ">" << std::endl;
            return (boost::shared_ptr< ElementData> &) s_Empty;
        }
        return (boost::shared_ptr< ElementData> &) itr->second;
    }


    std::map< std::string, boost::shared_ptr< ElementData> > ElementDataMap::BuildMap()
    {
        std::map< std::string, boost::shared_ptr< ElementData> > map;

        //   ElementData( Element Name,           Symbol,           Period,         AtomicNumber,       AtomicWeight,     CovalentRadius,      vdWRadius)

        // insert by name
        map.insert( std::make_pair(      "Actinium",  boost::shared_ptr< ElementData>( new ElementData(      "Actinium",            "Ac",             'f',              89,             227,            1.88,            2.00))));
        map.insert( std::make_pair(        "Silver",  boost::shared_ptr< ElementData>( new ElementData(        "Silver",            "Ag",             'd',              47,         107.868,            1.59,            1.72))));
        map.insert( std::make_pair(     "Aluminium",  boost::shared_ptr< ElementData>( new ElementData(     "Aluminium",            "Al",             'p',              13,          26.982,            1.35,            2.00))));
        map.insert( std::make_pair(     "Americium",  boost::shared_ptr< ElementData>( new ElementData(     "Americium",            "Am",             'f',              95,             243,            1.51,            2.00))));
        map.insert( std::make_pair(         "Argon",  boost::shared_ptr< ElementData>( new ElementData(         "Argon",            "Ar",             'p',              18,          39.948,            1.51,            1.88))));
        map.insert( std::make_pair(       "Arsenic",  boost::shared_ptr< ElementData>( new ElementData(       "Arsenic",            "As",             'p',              33,          74.922,            1.21,            1.85))));
        map.insert( std::make_pair(      "Astatine",  boost::shared_ptr< ElementData>( new ElementData(      "Astatine",            "At",             'p',              85,             210,            1.21,            2.00))));
        map.insert( std::make_pair(          "Gold",  boost::shared_ptr< ElementData>( new ElementData(          "Gold",            "Au",             'd',              79,         196.967,            1.50,            1.66))));
        map.insert( std::make_pair(         "Boron",  boost::shared_ptr< ElementData>( new ElementData(         "Boron",             "B",             'p',               5,          10.811,            0.83,            2.00))));
        map.insert( std::make_pair(        "Barium",  boost::shared_ptr< ElementData>( new ElementData(        "Barium",            "Ba",             's',              56,         137.327,            1.34,            2.00))));
        map.insert( std::make_pair(     "Beryllium",  boost::shared_ptr< ElementData>( new ElementData(     "Beryllium",            "Be",             's',               4,           9.012,            0.35,            2.00))));
        map.insert( std::make_pair(       "Bohrium",  boost::shared_ptr< ElementData>( new ElementData(       "Bohrium",            "Bh",             'd',             107,             264,            1.50,            2.00))));
        map.insert( std::make_pair(       "Bismuth",  boost::shared_ptr< ElementData>( new ElementData(       "Bismuth",            "Bi",             'p',              83,         208.980,            1.54,            2.00))));
        map.insert( std::make_pair(     "Berkelium",  boost::shared_ptr< ElementData>( new ElementData(     "Berkelium",            "Bk",             'f',              97,             247,            1.54,            2.00))));
        map.insert( std::make_pair(       "Bromine",  boost::shared_ptr< ElementData>( new ElementData(       "Bromine",            "Br",             'p',              35,          79.904,            1.21,            1.85))));
        map.insert( std::make_pair(        "Carbon",  boost::shared_ptr< ElementData>( new ElementData(        "Carbon",             "C",             'p',               6,          12.011,            0.68,            1.70))));
        map.insert( std::make_pair(       "Calcium",  boost::shared_ptr< ElementData>( new ElementData(       "Calcium",            "Ca",             's',              20,          40.078,            0.99,            2.00))));
        map.insert( std::make_pair(       "Cadmium",  boost::shared_ptr< ElementData>( new ElementData(       "Cadmium",            "Cd",             'd',              48,         112.411,            1.69,            1.58))));
        map.insert( std::make_pair(        "Cerium",  boost::shared_ptr< ElementData>( new ElementData(        "Cerium",            "Ce",             'f',              58,         140.116,            1.83,            2.00))));
        map.insert( std::make_pair(   "Californium",  boost::shared_ptr< ElementData>( new ElementData(   "Californium",            "Cf",             'f',              98,             251,            1.83,            2.00))));
        map.insert( std::make_pair(      "Chlorine",  boost::shared_ptr< ElementData>( new ElementData(      "Chlorine",            "Cl",             'p',              17,          35.453,            0.99,            1.75))));
        map.insert( std::make_pair(        "Curium",  boost::shared_ptr< ElementData>( new ElementData(        "Curium",            "Cm",             'f',              96,             247,            0.99,            2.00))));
        map.insert( std::make_pair(        "Cobalt",  boost::shared_ptr< ElementData>( new ElementData(        "Cobalt",            "Co",             'd',              27,          58.933,            1.33,            2.00))));
        map.insert( std::make_pair(      "Chromium",  boost::shared_ptr< ElementData>( new ElementData(      "Chromium",            "Cr",             'd',              24,          51.996,            1.35,            2.00))));
        map.insert( std::make_pair(       "Caesium",  boost::shared_ptr< ElementData>( new ElementData(       "Caesium",            "Cs",             's',              55,         132.905,            1.67,            2.00))));
        map.insert( std::make_pair(        "Copper",  boost::shared_ptr< ElementData>( new ElementData(        "Copper",            "Cu",             'd',              29,          63.546,            1.52,            1.40))));
        map.insert( std::make_pair(       "Dubnium",  boost::shared_ptr< ElementData>( new ElementData(       "Dubnium",            "Db",             'd',             105,             262,            1.50,            2.00))));
        map.insert( std::make_pair(  "Darmstadtium",  boost::shared_ptr< ElementData>( new ElementData(  "Darmstadtium",            "Ds",             'd',             110,             271,            1.50,            2.00))));
        map.insert( std::make_pair(    "Dysprosium",  boost::shared_ptr< ElementData>( new ElementData(    "Dysprosium",            "Dy",             'f',              66,         162.500,            1.75,            2.00))));
        map.insert( std::make_pair(        "Erbium",  boost::shared_ptr< ElementData>( new ElementData(        "Erbium",            "Er",             'f',              68,         167.260,            1.73,            2.00))));
        map.insert( std::make_pair(   "Einsteinium",  boost::shared_ptr< ElementData>( new ElementData(   "Einsteinium",            "Es",             'f',              99,             252,            1.50,            2.00))));
        map.insert( std::make_pair(      "Europium",  boost::shared_ptr< ElementData>( new ElementData(      "Europium",            "Eu",             'f',              63,         151.964,            1.99,            2.00))));
        map.insert( std::make_pair(      "Fluorine",  boost::shared_ptr< ElementData>( new ElementData(      "Fluorine",             "F",             'p',               9,          18.998,            0.64,            1.47))));
        map.insert( std::make_pair(          "Iron",  boost::shared_ptr< ElementData>( new ElementData(          "Iron",            "Fe",             'd',              26,          55.845,            1.34,            2.00))));
        map.insert( std::make_pair(       "Fermium",  boost::shared_ptr< ElementData>( new ElementData(       "Fermium",            "Fm",             'f',             100,             257,            1.50,            2.00))));
        map.insert( std::make_pair(      "Francium",  boost::shared_ptr< ElementData>( new ElementData(      "Francium",            "Fr",             's',              87,             223,            1.50,            2.00))));
        map.insert( std::make_pair(       "Gallium",  boost::shared_ptr< ElementData>( new ElementData(       "Gallium",            "Ga",             'p',              31,          69.723,            1.22,            1.87))));
        map.insert( std::make_pair(    "Gadolinium",  boost::shared_ptr< ElementData>( new ElementData(    "Gadolinium",            "Gd",             'f',              64,         157.250,            1.79,            2.00))));
        map.insert( std::make_pair(     "Germanium",  boost::shared_ptr< ElementData>( new ElementData(     "Germanium",            "Ge",             'p',              32,          72.610,            1.17,            2.00))));
        map.insert( std::make_pair(      "Hydrogen",  boost::shared_ptr< ElementData>( new ElementData(      "Hydrogen",             "H",             's',               1,           1.008,            0.23,            1.09))));
        map.insert( std::make_pair(        "Helium",  boost::shared_ptr< ElementData>( new ElementData(        "Helium",            "He",             'p',               2,           4.003,            1.50,            1.40))));
        map.insert( std::make_pair(       "Hafnium",  boost::shared_ptr< ElementData>( new ElementData(       "Hafnium",            "Hf",             'd',              72,         178.490,            1.57,            2.00))));
        map.insert( std::make_pair(       "Mercury",  boost::shared_ptr< ElementData>( new ElementData(       "Mercury",            "Hg",             'd',              80,         200.590,            1.70,            1.55))));
        map.insert( std::make_pair(       "Holmium",  boost::shared_ptr< ElementData>( new ElementData(       "Holmium",            "Ho",             'f',              67,         164.930,            1.74,            2.00))));
        map.insert( std::make_pair(       "Hassium",  boost::shared_ptr< ElementData>( new ElementData(       "Hassium",            "Hs",             'd',             108,             269,            1.50,            2.00))));
        map.insert( std::make_pair(        "Iodine",  boost::shared_ptr< ElementData>( new ElementData(        "Iodine",             "I",             'p',              53,         126.904,            1.40,            1.98))));
        map.insert( std::make_pair(        "Indium",  boost::shared_ptr< ElementData>( new ElementData(        "Indium",            "In",             'p',              49,         114.818,            1.63,            1.93))));
        map.insert( std::make_pair(       "Iridium",  boost::shared_ptr< ElementData>( new ElementData(       "Iridium",            "Ir",             'd',              77,         192.217,            1.32,            2.00))));
        map.insert( std::make_pair(     "Potassium",  boost::shared_ptr< ElementData>( new ElementData(     "Potassium",             "K",             's',              19,          39.098,            1.33,            2.75))));
        map.insert( std::make_pair(       "Krypton",  boost::shared_ptr< ElementData>( new ElementData(       "Krypton",            "Kr",             'p',              36,          83.800,            1.50,            2.02))));
        map.insert( std::make_pair(     "Lanthanum",  boost::shared_ptr< ElementData>( new ElementData(     "Lanthanum",            "La",             'f',              57,         138.906,            1.87,            2.00))));
        map.insert( std::make_pair(       "Lithium",  boost::shared_ptr< ElementData>( new ElementData(       "Lithium",            "Li",             's',               3,           6.941,            0.68,            1.82))));
        map.insert( std::make_pair(    "Lawrencium",  boost::shared_ptr< ElementData>( new ElementData(    "Lawrencium",            "Lr",             'd',             103,             262,            1.50,            2.00))));
        map.insert( std::make_pair(      "Lutetium",  boost::shared_ptr< ElementData>( new ElementData(      "Lutetium",            "Lu",             'd',              71,         174.967,            1.72,            2.00))));
        map.insert( std::make_pair(   "Mendelevium",  boost::shared_ptr< ElementData>( new ElementData(   "Mendelevium",            "Md",             'f',             101,             258,            1.50,            2.00))));
        map.insert( std::make_pair(     "Magnesium",  boost::shared_ptr< ElementData>( new ElementData(     "Magnesium",            "Mg",             's',              12,          24.305,            1.10,            1.73))));
        map.insert( std::make_pair(     "Manganese",  boost::shared_ptr< ElementData>( new ElementData(     "Manganese",            "Mn",             'd',              25,          54.938,            1.35,            2.00))));
        map.insert( std::make_pair(    "Molybdenum",  boost::shared_ptr< ElementData>( new ElementData(    "Molybdenum",            "Mo",             'd',              42,          95.940,            1.47,            2.00))));
        map.insert( std::make_pair(    "Meitnerium",  boost::shared_ptr< ElementData>( new ElementData(    "Meitnerium",            "Mt",             'd',             109,             268,            1.50,            2.00))));
        map.insert( std::make_pair(      "Nitrogen",  boost::shared_ptr< ElementData>( new ElementData(      "Nitrogen",             "N",             'p',               7,          14.007,            0.68,            1.55))));
        map.insert( std::make_pair(        "Sodium",  boost::shared_ptr< ElementData>( new ElementData(        "Sodium",            "Na",             's',              11,          22.991,            0.97,            2.27))));
        map.insert( std::make_pair(       "Niobium",  boost::shared_ptr< ElementData>( new ElementData(       "Niobium",            "Nb",             'd',              41,          92.906,            1.48,            2.00))));
        map.insert( std::make_pair(     "Neodymium",  boost::shared_ptr< ElementData>( new ElementData(     "Neodymium",            "Nd",             'f',              60,         144.240,            1.81,            2.00))));
        map.insert( std::make_pair(          "Neon",  boost::shared_ptr< ElementData>( new ElementData(          "Neon",            "Ne",             'p',              10,          20.180,            1.50,            1.54))));
        map.insert( std::make_pair(        "Nickel",  boost::shared_ptr< ElementData>( new ElementData(        "Nickel",            "Ni",             'd',              28,          58.693,            1.50,            1.63))));
        map.insert( std::make_pair(      "Nobelium",  boost::shared_ptr< ElementData>( new ElementData(      "Nobelium",            "No",             'f',             102,             259,            1.50,            2.00))));
        map.insert( std::make_pair(     "Neptunium",  boost::shared_ptr< ElementData>( new ElementData(     "Neptunium",            "Np",             'f',              93,             237,            1.55,            2.00))));
        map.insert( std::make_pair(        "Oxygen",  boost::shared_ptr< ElementData>( new ElementData(        "Oxygen",             "O",             'p',               8,          15.999,            0.68,            1.52))));
        map.insert( std::make_pair(        "Osmium",  boost::shared_ptr< ElementData>( new ElementData(        "Osmium",            "Os",             'd',              76,         190.230,            1.37,            2.00))));
        map.insert( std::make_pair(    "Phosphorus",  boost::shared_ptr< ElementData>( new ElementData(    "Phosphorus",             "P",             'p',              15,          30.974,            1.05,            1.80))));
        map.insert( std::make_pair(  "Protactinium",  boost::shared_ptr< ElementData>( new ElementData(  "Protactinium",            "Pa",             'f',              91,         231.036,            1.61,            2.00))));
        map.insert( std::make_pair(          "Lead",  boost::shared_ptr< ElementData>( new ElementData(          "Lead",            "Pb",             'p',              82,         207.200,            1.54,            2.02))));
        map.insert( std::make_pair(     "Palladium",  boost::shared_ptr< ElementData>( new ElementData(     "Palladium",            "Pd",             'd',              46,         106.420,            1.50,            1.63))));
        map.insert( std::make_pair(    "Promethium",  boost::shared_ptr< ElementData>( new ElementData(    "Promethium",            "Pm",             'f',              61,             145,            1.80,            2.00))));
        map.insert( std::make_pair(      "Polonium",  boost::shared_ptr< ElementData>( new ElementData(      "Polonium",            "Po",             'p',              84,             210,            1.68,            2.00))));
        map.insert( std::make_pair(  "Praseodymium",  boost::shared_ptr< ElementData>( new ElementData(  "Praseodymium",            "Pr",             'f',              59,         140.908,            1.82,            2.00))));
        map.insert( std::make_pair(      "Platinum",  boost::shared_ptr< ElementData>( new ElementData(      "Platinum",            "Pt",             'd',              78,         195.078,            1.50,            1.72))));
        map.insert( std::make_pair(     "Plutonium",  boost::shared_ptr< ElementData>( new ElementData(     "Plutonium",            "Pu",             'f',              94,             244,            1.53,            2.00))));
        map.insert( std::make_pair(        "Radium",  boost::shared_ptr< ElementData>( new ElementData(        "Radium",            "Ra",             's',              88,             226,            1.90,            2.00))));
        map.insert( std::make_pair(      "Rubidium",  boost::shared_ptr< ElementData>( new ElementData(      "Rubidium",            "Rb",             's',              37,          85.468,            1.47,            2.00))));
        map.insert( std::make_pair(       "Rhenium",  boost::shared_ptr< ElementData>( new ElementData(       "Rhenium",            "Re",             'd',              75,         186.207,            1.35,            2.00))));
        map.insert( std::make_pair( "Rutherfordium",  boost::shared_ptr< ElementData>( new ElementData( "Rutherfordium",            "Rf",             'd',             104,             261,            1.50,            2.00))));
        map.insert( std::make_pair(       "Rhodium",  boost::shared_ptr< ElementData>( new ElementData(       "Rhodium",            "Rh",             'd',              45,         102.906,            1.45,            2.00))));
        map.insert( std::make_pair(         "Radon",  boost::shared_ptr< ElementData>( new ElementData(         "Radon",            "Rn",             'p',              86,             222,            1.50,            2.00))));
        map.insert( std::make_pair(     "Ruthenium",  boost::shared_ptr< ElementData>( new ElementData(     "Ruthenium",            "Ru",             'd',              44,         101.070,            1.40,            2.00))));
        map.insert( std::make_pair(       "Sulphur",  boost::shared_ptr< ElementData>( new ElementData(       "Sulphur",             "S",             'p',              16,          32.066,            1.02,            1.80))));
        map.insert( std::make_pair(      "Antimony",  boost::shared_ptr< ElementData>( new ElementData(      "Antimony",            "Sb",             'p',              51,         121.760,            1.46,            2.00))));
        map.insert( std::make_pair(      "Scandium",  boost::shared_ptr< ElementData>( new ElementData(      "Scandium",            "Sc",             'd',              21,          44.956,            1.44,            2.00))));
        map.insert( std::make_pair(      "Selenium",  boost::shared_ptr< ElementData>( new ElementData(      "Selenium",            "Se",             'p',              34,          78.960,            1.22,            1.90))));
        map.insert( std::make_pair(    "Seaborgium",  boost::shared_ptr< ElementData>( new ElementData(    "Seaborgium",            "Sg",             'd',             106,             266,            1.50,            2.00))));
        map.insert( std::make_pair(       "Silicon",  boost::shared_ptr< ElementData>( new ElementData(       "Silicon",            "Si",             'p',              14,          28.086,            1.20,            2.10))));
        map.insert( std::make_pair(      "Samarium",  boost::shared_ptr< ElementData>( new ElementData(      "Samarium",            "Sm",             'f',              62,         150.360,            1.80,            2.00))));
        map.insert( std::make_pair(           "Tin",  boost::shared_ptr< ElementData>( new ElementData(           "Tin",            "Sn",             'p',              50,          118.71,            1.46,            2.17))));
        map.insert( std::make_pair(     "Strontium",  boost::shared_ptr< ElementData>( new ElementData(     "Strontium",            "Sr",             's',              38,          87.620,            1.12,            2.00))));
        map.insert( std::make_pair(      "Tantalum",  boost::shared_ptr< ElementData>( new ElementData(      "Tantalum",            "Ta",             'd',              73,         180.948,            1.43,            2.00))));
        map.insert( std::make_pair(       "Terbium",  boost::shared_ptr< ElementData>( new ElementData(       "Terbium",            "Tb",             'f',              65,         158.925,            1.76,            2.00))));
        map.insert( std::make_pair(    "Technetium",  boost::shared_ptr< ElementData>( new ElementData(    "Technetium",            "Tc",             'd',              43,              98,            1.35,            2.00))));
        map.insert( std::make_pair(     "Tellurium",  boost::shared_ptr< ElementData>( new ElementData(     "Tellurium",            "Te",             'p',              52,         127.600,            1.47,            2.06))));
        map.insert( std::make_pair(       "Thorium",  boost::shared_ptr< ElementData>( new ElementData(       "Thorium",            "Th",             'f',              90,         232.038,            1.79,            2.00))));
        map.insert( std::make_pair(      "Titanium",  boost::shared_ptr< ElementData>( new ElementData(      "Titanium",            "Ti",             'd',              22,          47.867,            1.47,            2.00))));
        map.insert( std::make_pair(      "Thallium",  boost::shared_ptr< ElementData>( new ElementData(      "Thallium",            "Tl",             'p',              81,         204.383,            1.55,            1.96))));
        map.insert( std::make_pair(       "Thulium",  boost::shared_ptr< ElementData>( new ElementData(       "Thulium",            "Tm",             'f',              69,         168.934,            1.72,            2.00))));
        map.insert( std::make_pair(       "Uranium",  boost::shared_ptr< ElementData>( new ElementData(       "Uranium",             "U",             'f',              92,         238.029,            1.58,            1.86))));
        map.insert( std::make_pair(      "Vanadium",  boost::shared_ptr< ElementData>( new ElementData(      "Vanadium",             "V",             'd',              23,          50.942,            1.33,            2.00))));
        map.insert( std::make_pair(      "Tungsten",  boost::shared_ptr< ElementData>( new ElementData(      "Tungsten",             "W",             'd',              74,         183.840,            1.37,            2.00))));
        map.insert( std::make_pair(         "Xenon",  boost::shared_ptr< ElementData>( new ElementData(         "Xenon",            "Xe",             'p',              54,         131.290,            1.50,            2.16))));
        map.insert( std::make_pair(       "Yttrium",  boost::shared_ptr< ElementData>( new ElementData(       "Yttrium",             "Y",             'd',              39,          88.906,            1.78,            2.00))));
        map.insert( std::make_pair(     "Ytterbium",  boost::shared_ptr< ElementData>( new ElementData(     "Ytterbium",            "Yb",             'f',              70,         173.040,            1.94,            2.00))));
        map.insert( std::make_pair(          "Zinc",  boost::shared_ptr< ElementData>( new ElementData(          "Zinc",            "Zn",             'd',              30,          65.390,            1.45,            1.39))));
        map.insert( std::make_pair(     "Zirconium",  boost::shared_ptr< ElementData>( new ElementData(     "Zirconium",            "Zr",             'c',              40,          91.224,            1.56,            2.00))));

        // insert by symbol, but link to object inserted by name
        map.insert( std::make_pair( "Ac", map.find( "Actinium")->second));
        map.insert( std::make_pair( "Ag", map.find( "Silver")->second));
        map.insert( std::make_pair( "Al", map.find( "Aluminium")->second));
        map.insert( std::make_pair( "Am", map.find( "Americium")->second));
        map.insert( std::make_pair( "Ar", map.find( "Argon")->second));
        map.insert( std::make_pair( "As", map.find( "Arsenic")->second));
        map.insert( std::make_pair( "At", map.find( "Astatine")->second));
        map.insert( std::make_pair( "Au", map.find( "Gold")->second));
        map.insert( std::make_pair( "B",  map.find( "Boron")->second));
        map.insert( std::make_pair( "Ba", map.find( "Barium")->second));
        map.insert( std::make_pair( "Be", map.find( "Beryllium")->second));
        map.insert( std::make_pair( "Bh", map.find( "Bohrium")->second));
        map.insert( std::make_pair( "Bi", map.find( "Bismuth")->second));
        map.insert( std::make_pair( "Bk", map.find( "Berkelium")->second));
        map.insert( std::make_pair( "Br", map.find( "Bromine")->second));
        map.insert( std::make_pair( "C",  map.find( "Carbon")->second));
        map.insert( std::make_pair( "Ca", map.find( "Calcium")->second));
        map.insert( std::make_pair( "Cd", map.find( "Cadmium")->second));
        map.insert( std::make_pair( "Ce", map.find( "Cerium")->second));
        map.insert( std::make_pair( "Cf", map.find( "Californium")->second));
        map.insert( std::make_pair( "Cl", map.find( "Chlorine")->second));
        map.insert( std::make_pair( "Cm", map.find( "Curium")->second));
        map.insert( std::make_pair( "Co", map.find( "Cobalt")->second));
        map.insert( std::make_pair( "Cr", map.find( "Chromium")->second));
        map.insert( std::make_pair( "Cs", map.find( "Caesium")->second));
        map.insert( std::make_pair( "Cu", map.find( "Copper")->second));
        map.insert( std::make_pair( "Db", map.find( "Dubnium")->second));
        map.insert( std::make_pair( "Ds", map.find( "Darmstadtium")->second));
        map.insert( std::make_pair( "Dy", map.find( "Dysprosium")->second));
        map.insert( std::make_pair( "Er", map.find( "Erbium")->second));
        map.insert( std::make_pair( "Es", map.find( "Einsteinium")->second));
        map.insert( std::make_pair( "Eu", map.find( "Europium")->second));
        map.insert( std::make_pair( "F",  map.find( "Fluorine")->second));
        map.insert( std::make_pair( "Fe", map.find( "Iron")->second));
        map.insert( std::make_pair( "Fm", map.find( "Fermium")->second));
        map.insert( std::make_pair( "Fr", map.find( "Francium")->second));
        map.insert( std::make_pair( "Ga", map.find( "Gallium")->second));
        map.insert( std::make_pair( "Gd", map.find( "Gadolinium")->second));
        map.insert( std::make_pair( "Ge", map.find( "Germanium")->second));
        map.insert( std::make_pair( "H",  map.find( "Hydrogen")->second));
        map.insert( std::make_pair( "He", map.find( "Helium")->second));
        map.insert( std::make_pair( "Hf", map.find( "Hafnium")->second));
        map.insert( std::make_pair( "Hg", map.find( "Mercury")->second));
        map.insert( std::make_pair( "Ho", map.find( "Holmium")->second));
        map.insert( std::make_pair( "Hs", map.find( "Hassium")->second));
        map.insert( std::make_pair( "I",  map.find( "Iodine")->second));
        map.insert( std::make_pair( "In", map.find( "Indium")->second));
        map.insert( std::make_pair( "Ir", map.find( "Iridium")->second));
        map.insert( std::make_pair( "K",  map.find( "Potassium")->second));
        map.insert( std::make_pair( "Kr", map.find( "Krypton")->second));
        map.insert( std::make_pair( "La", map.find( "Lanthanum")->second));
        map.insert( std::make_pair( "Li", map.find( "Lithium")->second));
        map.insert( std::make_pair( "Lw", map.find( "Lawrencium")->second));
        map.insert( std::make_pair( "Lr", map.find( "Lawrencium")->second));
        map.insert( std::make_pair( "Lu", map.find( "Lutetium")->second));
        map.insert( std::make_pair( "Md", map.find( "Mendelevium")->second));
        map.insert( std::make_pair( "Mg", map.find( "Magnesium")->second));
        map.insert( std::make_pair( "Mn", map.find( "Manganese")->second));
        map.insert( std::make_pair( "Mo", map.find( "Molybdenum")->second));
        map.insert( std::make_pair( "Mt", map.find( "Meitnerium")->second));
        map.insert( std::make_pair( "N",  map.find( "Nitrogen")->second));
        map.insert( std::make_pair( "Na", map.find( "Sodium")->second));
        map.insert( std::make_pair( "Nb", map.find( "Niobium")->second));
        map.insert( std::make_pair( "Nd", map.find( "Neodymium")->second));
        map.insert( std::make_pair( "Ne", map.find( "Neon")->second));
        map.insert( std::make_pair( "Ni", map.find( "Nickel")->second));
        map.insert( std::make_pair( "No", map.find( "Nobelium")->second));
        map.insert( std::make_pair( "Np", map.find( "Neptunium")->second));
        map.insert( std::make_pair( "O",  map.find( "Oxygen")->second));
        map.insert( std::make_pair( "Os", map.find( "Osmium")->second));
        map.insert( std::make_pair( "P",  map.find( "Phosphorus")->second));
        map.insert( std::make_pair( "Pa", map.find( "Protactinium")->second));
        map.insert( std::make_pair( "Pb", map.find( "Lead")->second));
        map.insert( std::make_pair( "Pd", map.find( "Palladium")->second));
        map.insert( std::make_pair( "Pm", map.find( "Promethium")->second));
        map.insert( std::make_pair( "Po", map.find( "Polonium")->second));
        map.insert( std::make_pair( "Pr", map.find( "Praseodymium")->second));
        map.insert( std::make_pair( "Pt", map.find( "Platinum")->second));
        map.insert( std::make_pair( "Pu", map.find( "Plutonium")->second));
        map.insert( std::make_pair( "Ra", map.find( "Radium")->second));
        map.insert( std::make_pair( "Rb", map.find( "Rubidium")->second));
        map.insert( std::make_pair( "Re", map.find( "Rhenium")->second));
        map.insert( std::make_pair( "Rf", map.find( "Rutherfordium")->second));
        map.insert( std::make_pair( "Rh", map.find( "Rhodium")->second));
        map.insert( std::make_pair( "Rn", map.find( "Radon")->second));
        map.insert( std::make_pair( "Ru", map.find( "Ruthenium")->second));
        map.insert( std::make_pair( "S",  map.find( "Sulphur")->second));
        map.insert( std::make_pair( "Sb", map.find( "Antimony")->second));
        map.insert( std::make_pair( "Sc", map.find( "Scandium")->second));
        map.insert( std::make_pair( "Se", map.find( "Selenium")->second));
        map.insert( std::make_pair( "Sg", map.find( "Seaborgium")->second));
        map.insert( std::make_pair( "Si", map.find( "Silicon")->second));
        map.insert( std::make_pair( "Sm", map.find( "Samarium")->second));
        map.insert( std::make_pair( "Sn", map.find( "Tin")->second));
        map.insert( std::make_pair( "Sr", map.find( "Strontium")->second));
        map.insert( std::make_pair( "Ta", map.find( "Tantalum")->second));
        map.insert( std::make_pair( "Tb", map.find( "Terbium")->second));
        map.insert( std::make_pair( "Tc", map.find( "Technetium")->second));
        map.insert( std::make_pair( "Te", map.find( "Tellurium")->second));
        map.insert( std::make_pair( "Th", map.find( "Thorium")->second));
        map.insert( std::make_pair( "Ti", map.find( "Titanium")->second));
        map.insert( std::make_pair( "Tl", map.find( "Thallium")->second));
        map.insert( std::make_pair( "Tm", map.find( "Thulium")->second));
        map.insert( std::make_pair( "U",  map.find( "Uranium")->second));
        map.insert( std::make_pair( "V",  map.find( "Vanadium")->second));
        map.insert( std::make_pair( "W",  map.find( "Tungsten")->second));
        map.insert( std::make_pair( "Xe", map.find( "Xenon")->second));
        map.insert( std::make_pair( "Y",  map.find( "Yttrium")->second));
        map.insert( std::make_pair( "Yb", map.find( "Ytterbium")->second));
        map.insert( std::make_pair( "Zn", map.find( "Zinc")->second));
        map.insert( std::make_pair( "Zr", map.find( "Zirconium")->second));
        map.insert( std::make_pair( "CA", map.find( "Carbon")->second));
        map.insert( std::make_pair( "CB", map.find( "Carbon")->second));
        map.insert( std::make_pair( "CD", map.find( "Carbon")->second));

        // types from namd topology file // TODO !! // could be done differently!
//        map.insert( std::make_pair( "1C1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "1C2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "1CB", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "1H1A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "1H1B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "1H2A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "1O1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "1O2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "1SG", map.find( "Sulphur")->second));
//        map.insert( std::make_pair( "2C1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "2C2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "2CB", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "2H2A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "2H2B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "2O1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "2SG", map.find( "Sulphur")->second));
//        map.insert( std::make_pair( "C", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C10", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C11", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C12", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C13", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C14", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C15", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C16", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C17", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C18", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C19", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C20", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C21", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C210", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C211", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C212", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C213", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C214", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C215", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C216", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C217", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C218", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C22", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C23", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C24", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C25", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C26", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C27", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C28", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C29", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C3", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C31", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C310", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C311", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C312", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C313", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C314", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C315", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C316", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C32", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C33", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C34", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C35", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C36", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C37", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C38", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C39", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C4", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C5", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C6", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C7", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C8", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "C9", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CA", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CAL", map.find( "Calcium")->second));
//        map.insert( std::make_pair( "CAT", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CAY", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CB", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CD", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CD1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CD2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CE", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CE1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CE2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CE3", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CES", map.find( "Cesium")->second));
//        map.insert( std::make_pair( "CG", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CG1", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CG2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CH2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CL", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CLA", map.find( "Chloride")->second));
//        map.insert( std::make_pair( "CLP", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CR", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CRP", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CT", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CY", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CZ", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CZ2", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "CZ3", map.find( "Carbon")->second));
//        map.insert( std::make_pair( "H1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H101", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H102", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H10Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H111", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H112", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H11Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H121", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H122", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H123", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12T", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H12Z", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H13Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14T", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H14Z", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H15Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H16Z", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H17", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H17A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H17B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H17R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H17S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H18T", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H19", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H1A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H1B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H20", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H21", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H21A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H21B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H22", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H22A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H22B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H22C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H23", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H2Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H31", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H32", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H33", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H3Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H41", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H42", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H43", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H4Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H51", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H52", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H5Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H61", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H62", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H6Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H71", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H72", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H7Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H81", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H82", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8C", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H8Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H91", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H92", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9A", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9B", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9R", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9S", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9X", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "H9Y", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HA", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HA1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HA2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HB", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HB1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HB2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HB3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD11", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD12", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD13", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD21", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD22", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD23", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HD3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE21", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE22", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HE3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG11", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG12", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG13", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG21", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG22", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HG23", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH11", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH12", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH21", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HH22", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HL", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HL1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HL2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HL3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HN", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HN1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HN2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HN3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HNT", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HO2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HO3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HR", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HR1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HR2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HR3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HS", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HT1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HT2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HT3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HX", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HY", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HY1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HY2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HY3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HZ", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HZ1", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HZ2", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "HZ3", map.find( "Hydrogen")->second));
//        map.insert( std::make_pair( "MG", map.find( "Magnesium")->second));
//        map.insert( std::make_pair( "N", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "ND1", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "ND2", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NE", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NE1", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NE2", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NH1", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NH2", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NL", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NR", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NT", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "NZ", map.find( "Nitrogen")->second));
//        map.insert( std::make_pair( "O", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O11", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O12", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O13", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O14", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O21", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O22", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O3", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O31", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O32", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "O4", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OD1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OD2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OE1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OE2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OG", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OG1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OH", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OH2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OH3", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OL", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OP1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OP2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OP3", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OP4", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OR", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OS1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OS2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OS3", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OS4", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OT1", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OT2", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "OY", map.find( "Oxygen")->second));
//        map.insert( std::make_pair( "P", map.find( "Phosphorus")->second));
//        map.insert( std::make_pair( "P1", map.find( "Phosphorus")->second));
//        map.insert( std::make_pair( "POT", map.find( "Potasium")->second));
//        map.insert( std::make_pair( "S", map.find( "Sulphur")->second));
//        map.insert( std::make_pair( "SD", map.find( "Sulphur")->second));
//        map.insert( std::make_pair( "SG", map.find( "Sulphur")->second));
//        map.insert( std::make_pair( "SOD", map.find( "Sodium")->second));
//        map.insert( std::make_pair( "ZN", map.find( "Zinc")->second));

        return map;
    } // end BuildMap()

} // end namespace mol
